# Generated by Django 5.2.3 on 2025-08-16 13:11

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('click', 'Click'), ('payme', 'Payme'), ('uzcard', 'UzCard'), ('humo', 'Humo'), ('stripe', 'Stripe'), ('paypal', 'PayPal')], max_length=50, unique=True, verbose_name="To'lov tizimi nomi")),
                ('display_name', models.CharField(max_length=100, verbose_name="Ko'rsatiladigan nom")),
                ('description', models.TextField(blank=True, verbose_name='Tavsif')),
                ('is_active', models.BooleanField(default=True, verbose_name='Faol')),
                ('is_test_mode', models.BooleanField(default=True, verbose_name='Test rejimi')),
                ('merchant_id', models.CharField(blank=True, max_length=100, verbose_name='Merchant ID')),
                ('service_id', models.CharField(blank=True, max_length=100, verbose_name='Service ID')),
                ('secret_key', models.CharField(blank=True, max_length=500, verbose_name='Secret Key')),
                ('public_key', models.CharField(blank=True, max_length=500, verbose_name='Public Key')),
                ('api_url', models.URLField(blank=True, verbose_name='API URL')),
                ('webhook_url', models.CharField(blank=True, max_length=255, verbose_name='Webhook URL')),
                ('supported_currencies', models.JSONField(default=list, verbose_name="Qo'llab-quvvatlanadigan valyutalar")),
                ('default_currency', models.CharField(choices=[('UZS', 'Uzbek Som'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('RUB', 'Russian Ruble')], default='UZS', max_length=3, verbose_name='Asosiy valyuta')),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name="Minimal to'lov miqdori")),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('10000000.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name="Maksimal to'lov miqdori")),
                ('commission_type', models.CharField(choices=[('percentage', 'Foiz'), ('fixed', "Qat'iy summa"), ('combined', 'Aralash')], default='percentage', max_length=20, verbose_name='Komissiya turi')),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Komissiya foizi')),
                ('commission_fixed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name="Qo'shimcha komissiya")),
                ('processing_time_minutes', models.PositiveIntegerField(default=30, verbose_name='Qayta ishlash vaqti (daqiqa)')),
                ('auto_capture', models.BooleanField(default=True, verbose_name='Avtomatik yechish')),
                ('supports_refunds', models.BooleanField(default=True, verbose_name="Qaytarishni qo'llab-quvvatlaydi")),
                ('supports_recurring', models.BooleanField(default=False, verbose_name="Takroriy to'lovlarni qo'llab-quvvatlaydi")),
                ('logo', models.ImageField(blank=True, null=True, upload_to='payment_gateways/logos/', verbose_name='Logo')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Tartiblash')),
                ('extra_config', models.JSONField(blank=True, default=dict, verbose_name="Qo'shimcha sozlamalar")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='Oxirgi ishlatilgan vaqt')),
            ],
            options={
                'verbose_name': "To'lov tizimi",
                'verbose_name_plural': "To'lov tizimlari",
                'ordering': ['sort_order', 'name'],
                'indexes': [models.Index(fields=['name', 'is_active'], name='payments_pa_name_1477a5_idx'), models.Index(fields=['is_active', 'sort_order'], name='payments_pa_is_acti_094580_idx')],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('wallet_topup', "Hamyon to'ldirish"), ('consultation', "Konsultatsiya to'lovi"), ('doctor_view', "Shifokor ko'rish"), ('subscription', "Obuna to'lovi"), ('service', "Xizmat to'lovi"), ('refund', 'Qaytarish')], default='wallet_topup', max_length=20, verbose_name="To'lov turi")),
                ('payment_method', models.CharField(choices=[('card', 'Bank kartasi'), ('wallet', 'Elektron hamyon'), ('bank_transfer', "Bank o'tkazmasi"), ('cash', 'Naqd pul'), ('crypto', 'Kriptovalyuta')], default='card', max_length=20, verbose_name="To'lov usuli")),
                ('currency', models.CharField(default='UZS', max_length=3, verbose_name='Valyuta')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Asosiy summa')),
                ('commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Komissiya')),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Chegirma')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Jami summa')),
                ('status', models.CharField(choices=[('pending', 'Kutilmoqda'), ('processing', 'Qayta ishlanmoqda'), ('requires_action', 'Harakat talab qilinadi'), ('completed', 'Tugallangan'), ('failed', 'Muvaffaqiyatsiz'), ('cancelled', 'Bekor qilingan'), ('expired', 'Muddati tugagan'), ('refunded', 'Qaytarilgan'), ('partially_refunded', 'Qisman qaytarilgan')], db_index=True, default='pending', max_length=20, verbose_name='Holat')),
                ('reference_number', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Havola raqami')),
                ('gateway_transaction_id', models.CharField(blank=True, db_index=True, max_length=100, verbose_name='Gateway tranzaksiya ID')),
                ('gateway_payment_id', models.CharField(blank=True, max_length=100, verbose_name="Gateway to'lov ID")),
                ('gateway_reference', models.CharField(blank=True, max_length=100, verbose_name='Gateway havolasi')),
                ('gateway_response', models.JSONField(blank=True, default=dict, verbose_name='Gateway javobi')),
                ('gateway_error_code', models.CharField(blank=True, max_length=50, verbose_name='Gateway xato kodi')),
                ('gateway_error_message', models.TextField(blank=True, verbose_name='Gateway xato xabari')),
                ('payment_url', models.URLField(blank=True, max_length=500, verbose_name="To'lov URL")),
                ('success_url', models.URLField(blank=True, max_length=500, verbose_name='Muvaffaqiyat URL')),
                ('cancel_url', models.URLField(blank=True, max_length=500, verbose_name='Bekor qilish URL')),
                ('callback_url', models.URLField(blank=True, max_length=500, verbose_name='Callback URL')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='Tavsif')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name="Qo'shimcha ma'lumotlar")),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP manzil')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('client_info', models.JSONField(blank=True, default=dict, verbose_name="Mijoz ma'lumotlari")),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name="Bog'liq obyekt ID")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Yaratilgan vaqt')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan vaqt')),
                ('processing_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Qayta ishlash boshlangan vaqt')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Tugallangan vaqt')),
                ('expires_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Muddati tugash vaqti')),
                ('attempt_count', models.PositiveIntegerField(default=0, verbose_name='Urinishlar soni')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Maksimal urinishlar')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name="Bog'liq obyekt turi")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.paymentgateway', verbose_name="To'lov tizimi")),
            ],
            options={
                'verbose_name': "To'lov",
                'verbose_name_plural': "To'lovlar",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_type', models.CharField(choices=[('card', 'Bank kartasi'), ('wallet', 'Elektron hamyon'), ('bank_account', 'Bank hisobi'), ('mobile_money', 'Mobil pul')], default='card', max_length=20, verbose_name='Usul turi')),
                ('nickname', models.CharField(blank=True, max_length=100, verbose_name='Taxallus')),
                ('is_default', models.BooleanField(default=False, verbose_name='Asosiy usul')),
                ('is_active', models.BooleanField(default=True, verbose_name='Faol')),
                ('card_type', models.CharField(blank=True, choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('uzcard', 'UzCard'), ('humo', 'Humo'), ('unionpay', 'UnionPay')], max_length=20, verbose_name='Karta turi')),
                ('card_number_masked', models.CharField(blank=True, max_length=20, verbose_name='Karta raqami (yashirilgan)')),
                ('card_holder_name', models.CharField(blank=True, max_length=100, verbose_name='Karta egasi')),
                ('expiry_month', models.CharField(blank=True, max_length=2, verbose_name='Tugash oyi')),
                ('expiry_year', models.CharField(blank=True, max_length=4, verbose_name='Tugash yili')),
                ('bank_name', models.CharField(blank=True, max_length=100, verbose_name='Bank nomi')),
                ('account_number_masked', models.CharField(blank=True, max_length=30, verbose_name='Hisob raqami (yashirilgan)')),
                ('gateway_token', models.CharField(blank=True, max_length=500, verbose_name='Gateway token')),
                ('gateway_customer_id', models.CharField(blank=True, max_length=100, verbose_name='Gateway mijoz ID')),
                ('gateway_method_id', models.CharField(blank=True, max_length=100, verbose_name='Gateway usul ID')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name="Qo'shimcha ma'lumotlar")),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='Ishlatilgan soni')),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='Oxirgi ishlatilgan')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Tasdiqlangan')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Tasdiqlangan vaqt')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Muddati tugash vaqti')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_methods', to='payments.paymentgateway', verbose_name="To'lov tizimi")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': "To'lov usuli",
                'verbose_name_plural': "To'lov usullari",
                'ordering': ['-is_default', '-last_used_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Qaytariladigan summa')),
                ('currency', models.CharField(max_length=3, verbose_name='Valyuta')),
                ('reason', models.CharField(choices=[('user_request', "Foydalanuvchi so'rovi"), ('duplicate_payment', "Takroriy to'lov"), ('fraudulent', 'Firibgarlik'), ('system_error', 'Tizim xatoligi'), ('service_unavailable', 'Xizmat mavjud emas'), ('quality_issue', 'Sifat muammosi'), ('admin_action', 'Administrator amali'), ('chargeback', 'Chargeback'), ('other', 'Boshqa')], max_length=20, verbose_name='Sabab')),
                ('reason_description', models.TextField(blank=True, verbose_name='Sabab tavsifi')),
                ('status', models.CharField(choices=[('pending', 'Kutilmoqda'), ('processing', 'Qayta ishlanmoqda'), ('completed', 'Tugallangan'), ('failed', 'Muvaffaqiyatsiz'), ('cancelled', 'Bekor qilingan'), ('rejected', 'Rad etilgan')], default='pending', max_length=20, verbose_name='Holat')),
                ('gateway_refund_id', models.CharField(blank=True, max_length=100, verbose_name='Gateway refund ID')),
                ('gateway_reference', models.CharField(blank=True, max_length=100, verbose_name='Gateway havolasi')),
                ('gateway_response', models.JSONField(blank=True, default=dict, verbose_name='Gateway javobi')),
                ('gateway_error_code', models.CharField(blank=True, max_length=50, verbose_name='Gateway xato kodi')),
                ('gateway_error_message', models.TextField(blank=True, verbose_name='Gateway xato xabari')),
                ('internal_notes', models.TextField(blank=True, verbose_name='Ichki izohlar')),
                ('customer_notes', models.TextField(blank=True, verbose_name='Mijoz izohlari')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name="Qo'shimcha ma'lumotlar")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Qayta ishlangan vaqt')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Tugallangan vaqt')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_refunds', to=settings.AUTH_USER_MODEL, verbose_name='Tasdiqlagan foydalanuvchi')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.payment', verbose_name="To'lov")),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL, verbose_name='Qayta ishlagan foydalanuvchi')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_refunds', to=settings.AUTH_USER_MODEL, verbose_name="So'ragan foydalanuvchi")),
            ],
            options={
                'verbose_name': "To'lov qaytarish",
                'verbose_name_plural': "To'lov qaytarishlar",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('webhook_type', models.CharField(choices=[('payment_created', "To'lov yaratildi"), ('payment_completed', "To'lov tugallandi"), ('payment_failed', "To'lov muvaffaqiyatsiz"), ('payment_cancelled', "To'lov bekor qilindi"), ('refund_created', 'Qaytarish yaratildi'), ('refund_completed', 'Qaytarish tugallandi'), ('other', 'Boshqa')], default='other', max_length=20, verbose_name='Webhook turi')),
                ('request_method', models.CharField(default='POST', max_length=10, verbose_name="So'rov usuli")),
                ('request_headers', models.JSONField(default=dict, verbose_name="So'rov sarlavhalari")),
                ('request_body', models.JSONField(default=dict, verbose_name="So'rov ma'lumotlari")),
                ('raw_body', models.TextField(blank=True, verbose_name="Xom ma'lumotlar")),
                ('response_status', models.PositiveIntegerField(default=200, verbose_name='Javob holati')),
                ('response_data', models.JSONField(blank=True, default=dict, verbose_name="Javob ma'lumotlari")),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP manzil')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('signature_valid', models.BooleanField(default=False, verbose_name="Imzo to'g'ri")),
                ('processed', models.BooleanField(default=False, verbose_name='Qayta ishlangan')),
                ('processing_time_ms', models.PositiveIntegerField(default=0, verbose_name='Qayta ishlash vaqti (ms)')),
                ('processing_result', models.TextField(blank=True, verbose_name='Qayta ishlash natijasi')),
                ('error_message', models.TextField(blank=True, verbose_name='Xato xabari')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Qabul qilingan vaqt')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Qayta ishlangan vaqt')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='payments.paymentgateway', verbose_name="To'lov tizimi")),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='payments.payment', verbose_name="To'lov")),
            ],
            options={
                'verbose_name': 'Payment Webhook',
                'verbose_name_plural': 'Payment Webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymeTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payme_id', models.CharField(max_length=100, unique=True, verbose_name='Payme Transaction ID')),
                ('payme_time', models.BigIntegerField(verbose_name='Payme Time')),
                ('create_time', models.BigIntegerField(verbose_name='Create Time')),
                ('perform_time', models.BigIntegerField(default=0, verbose_name='Perform Time')),
                ('cancel_time', models.BigIntegerField(default=0, verbose_name='Cancel Time')),
                ('state', models.IntegerField(choices=[(1, 'Yaratilgan'), (2, 'Tugallangan'), (-1, 'Bekor qilingan (yaratish)'), (-2, 'Bekor qilingan (tugallash)')], default=1, verbose_name='Holat')),
                ('reason', models.IntegerField(blank=True, null=True, verbose_name='Sabab kodi')),
                ('account', models.JSONField(default=dict, verbose_name="Hisob ma'lumotlari")),
                ('receivers', models.JSONField(blank=True, default=list, verbose_name='Qabul qiluvchilar')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name="Qo'shimcha ma'lumotlar")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payme_transaction', to='payments.payment', verbose_name="To'lov")),
            ],
            options={
                'verbose_name': 'Payme Transaction',
                'verbose_name_plural': 'Payme Transactions',
            },
        ),
        migrations.CreateModel(
            name='ClickTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_trans_id', models.CharField(max_length=100, unique=True, verbose_name='Click Transaction ID')),
                ('click_paydoc_id', models.CharField(blank=True, max_length=100, verbose_name='Click Paydoc ID')),
                ('merchant_trans_id', models.CharField(max_length=100, verbose_name='Merchant Transaction ID')),
                ('service_id', models.CharField(max_length=50, verbose_name='Service ID')),
                ('merchant_prepare_id', models.CharField(blank=True, max_length=100, verbose_name='Merchant Prepare ID')),
                ('merchant_confirm_id', models.CharField(blank=True, max_length=100, verbose_name='Merchant Confirm ID')),
                ('sign_time', models.DateTimeField(blank=True, null=True, verbose_name='Sign Time')),
                ('error_code', models.IntegerField(default=0, verbose_name='Error Code')),
                ('error_note', models.CharField(blank=True, max_length=255, verbose_name='Error Note')),
                ('card_type', models.CharField(blank=True, max_length=50, verbose_name='Karta turi')),
                ('card_number_masked', models.CharField(blank=True, max_length=20, verbose_name='Karta raqami (yashirilgan)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='click_transaction', to='payments.payment', verbose_name="To'lov")),
            ],
            options={
                'verbose_name': 'Click Transaction',
                'verbose_name_plural': 'Click Transactions',
                'indexes': [models.Index(fields=['click_trans_id'], name='payments_cl_click_t_48e360_idx'), models.Index(fields=['merchant_trans_id'], name='payments_cl_merchan_6a9d51_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentDispute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispute_id', models.CharField(max_length=100, unique=True, verbose_name='Nizo ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Nizoli summa')),
                ('currency', models.CharField(max_length=3, verbose_name='Valyuta')),
                ('reason', models.CharField(choices=[('fraud', 'Firibgarlik'), ('authorization', 'Ruxsat berish'), ('duplicate', 'Takrorlash'), ('credit_not_processed', 'Kredit qayta ishlanmagan'), ('cancelled_recurring', 'Takroriy bekor qilingan'), ('product_not_received', 'Mahsulot olinmagan'), ('product_unacceptable', 'Mahsulot qabul qilinmaydi'), ('other', 'Boshqa')], max_length=30, verbose_name='Sabab')),
                ('status', models.CharField(choices=[('opened', 'Ochilgan'), ('under_review', "Ko'rib chiqilmoqda"), ('evidence_required', 'Dalil talab qilinadi'), ('responded', 'Javob berilgan'), ('won', 'Yutilgan'), ('lost', 'Yutqazilgan'), ('accepted', 'Qabul qilingan'), ('closed', 'Yopilgan')], default='opened', max_length=20, verbose_name='Holat')),
                ('evidence_details', models.JSONField(blank=True, default=dict, verbose_name="Dalil ma'lumotlari")),
                ('evidence_due_by', models.DateTimeField(blank=True, null=True, verbose_name='Dalil muddati')),
                ('gateway_dispute_id', models.CharField(blank=True, max_length=100, verbose_name='Gateway nizo ID')),
                ('gateway_data', models.JSONField(blank=True, default=dict, verbose_name="Gateway ma'lumotlari")),
                ('description', models.TextField(blank=True, verbose_name='Tavsif')),
                ('customer_message', models.TextField(blank=True, verbose_name='Mijoz xabari')),
                ('response_message', models.TextField(blank=True, verbose_name='Javob xabari')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Javob berilgan vaqt')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Yopilgan vaqt')),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_disputes', to=settings.AUTH_USER_MODEL, verbose_name='Yurituvchi')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='payments.payment', verbose_name="To'lov")),
            ],
            options={
                'verbose_name': "To'lov nizosi",
                'verbose_name_plural': "To'lov nizolari",
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment', 'status'], name='payments_pa_payment_50d581_idx'), models.Index(fields=['dispute_id'], name='payments_pa_dispute_1624d4_idx'), models.Index(fields=['gateway_dispute_id'], name='payments_pa_gateway_f6b2a7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user', 'status'], name='payments_pa_user_id_01767a_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway', 'status'], name='payments_pa_gateway_7fb286_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway_transaction_id'], name='payments_pa_gateway_2a3159_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['reference_number'], name='payments_pa_referen_c54e4c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at', 'status'], name='payments_pa_created_bc9e4b_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['expires_at'], name='payments_pa_expires_32b381_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_type', 'status'], name='payments_pa_payment_05904b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user', 'is_active'], name='payments_pa_user_id_bd2d73_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['gateway', 'is_active'], name='payments_pa_gateway_ef8b08_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['gateway_token'], name='payments_pa_gateway_b3cc7c_idx'),
        ),
        migrations.AddConstraint(
            model_name='paymentmethod',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('user', 'is_default'), name='unique_default_payment_method_per_user'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['payment', 'status'], name='payments_pa_payment_2735e7_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_bd676a_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['gateway_refund_id'], name='payments_pa_gateway_e3a394_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['gateway', 'created_at'], name='payments_pa_gateway_ac171d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['processed', 'created_at'], name='payments_pa_process_100de0_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['webhook_type', 'created_at'], name='payments_pa_webhook_272dcf_idx'),
        ),
        migrations.AddIndex(
            model_name='paymetransaction',
            index=models.Index(fields=['payme_id'], name='payments_pa_payme_i_3bd8f1_idx'),
        ),
        migrations.AddIndex(
            model_name='paymetransaction',
            index=models.Index(fields=['state'], name='payments_pa_state_1a0ad5_idx'),
        ),
    ]
