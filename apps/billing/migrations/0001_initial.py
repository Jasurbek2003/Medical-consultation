# Generated by Django 5.2.3 on 2025-08-16 13:11

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('doctors', '0005_alter_doctor_diploma_image_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('doctor_view', "Shifokor profilini ko'rish"), ('consultation', 'Konsultatsiya'), ('chat_message', 'Chat xabar'), ('ai_diagnosis', 'AI diagnostika'), ('prescription', 'Retsept')], max_length=50, unique=True, verbose_name='Xizmat turi')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name="Narx (so'm)")),
                ('is_active', models.BooleanField(default=True, verbose_name='Faol')),
                ('description', models.TextField(blank=True, verbose_name='Tavsif')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Chegirma foizi')),
                ('min_quantity_for_discount', models.PositiveIntegerField(default=1, verbose_name='Chegirma uchun minimal miqdor')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Billing qoidasi',
                'verbose_name_plural': 'Billing qoidalari',
            },
        ),
        migrations.CreateModel(
            name='BillingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_views_per_day', models.PositiveIntegerField(default=3, verbose_name="Kunlik bepul ko'rishlar soni")),
                ('free_views_for_new_users', models.PositiveIntegerField(default=5, verbose_name="Yangi foydalanuvchilar uchun bepul ko'rishlar")),
                ('min_wallet_topup', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), max_digits=10, verbose_name="Minimal hamyon to'ldirish")),
                ('max_wallet_balance', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), max_digits=12, verbose_name='Maksimal hamyon balansi')),
                ('enable_billing', models.BooleanField(default=True, verbose_name="Billing'ni yoqish")),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='Texnik ishlar rejimi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Billing sozlamalari',
                'verbose_name_plural': 'Billing sozlamalari',
            },
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Balans')),
                ('total_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Jami sarflangan')),
                ('total_topped_up', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name="Jami to'ldirilgan")),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Bloklangan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi hamyoni',
                'verbose_name_plural': 'Foydalanuvchi hamyonlari',
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('credit', "Kredit (Qo'shish)"), ('debit', 'Debit (Yechish)')], max_length=10, verbose_name='Tranzaksiya turi')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Summa')),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Oldingi balans')),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Keyingi balans')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Tavsif')),
                ('status', models.CharField(choices=[('pending', 'Kutilmoqda'), ('completed', 'Tugallangan'), ('failed', 'Muvaffaqiyatsiz'), ('cancelled', 'Bekor qilingan')], default='completed', max_length=10, verbose_name='Holat')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='billing.userwallet', verbose_name='Hamyon')),
            ],
            options={
                'verbose_name': 'Hamyon tranzaksiyasi',
                'verbose_name_plural': 'Hamyon tranzaksiyalari',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DoctorViewCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_charged', models.DecimalField(decimal_places=2, max_digits=10, verbose_name="To'langan summa")),
                ('view_duration', models.DurationField(blank=True, null=True, verbose_name="Ko'rish davomiyligi")),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP manzil')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_charges', to='doctors.doctor', verbose_name='Shifokor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_view_charges', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_views', to='billing.wallettransaction', verbose_name='Tranzaksiya')),
            ],
            options={
                'verbose_name': "Shifokor ko'rish to'lovi",
                'verbose_name_plural': "Shifokor ko'rish to'lovlari",
                'ordering': ['-created_at'],
                'unique_together': {('user', 'doctor', 'created_at')},
            },
        ),
    ]
