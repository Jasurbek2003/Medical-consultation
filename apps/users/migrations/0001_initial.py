# Generated by Django 5.2.3 on 2025-07-19 12:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('hospitals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('phone', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message="Telefon raqam noto'g'ri formatda", regex='^\\+998\\d{9}$')], verbose_name='Telefon raqam')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('user_type', models.CharField(choices=[('patient', 'Bemor'), ('doctor', 'Shifokor'), ('admin', 'Administrator'), ('hospital_admin', 'Shifoxona administratori')], default='patient', max_length=20, verbose_name='Foydalanuvchi turi')),
                ('first_name', models.CharField(max_length=50, verbose_name='Ism')),
                ('last_name', models.CharField(max_length=50, verbose_name='Familiya')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Otasining ismi')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name="Tug'ilgan sana")),
                ('gender', models.CharField(blank=True, choices=[('M', 'Erkak'), ('F', 'Ayol'), ('O', 'Boshqa')], max_length=10, null=True, verbose_name='Jins')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars/', verbose_name='Avatar')),
                ('language', models.CharField(choices=[('uz', "O'zbek"), ('ru', 'Rus'), ('en', 'Ingliz')], default='uz', max_length=10, verbose_name='Til')),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, null=True, verbose_name='Qon guruhi')),
                ('height', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(250)], verbose_name="Bo'y (sm)")),
                ('weight', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(300)], verbose_name='Vazn (kg)')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergiyalar')),
                ('chronic_diseases', models.TextField(blank=True, null=True, verbose_name='Surunkali kasalliklar')),
                ('current_medications', models.TextField(blank=True, null=True, verbose_name='Hozirgi dorilar')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Viloyat')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tuman')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Manzil')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Favqulodda aloqa ismi')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=13, null=True, verbose_name='Favqulodda aloqa telefoni')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Favqulodda aloqa munosabati')),
                ('notifications_enabled', models.BooleanField(default=True, verbose_name='Bildirishnomalar')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email bildirishnomalar')),
                ('sms_notifications', models.BooleanField(default=True, verbose_name='SMS bildirishnomalar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Faol')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Xodim')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Tasdiqlangan')),
                ('is_profile_complete', models.BooleanField(default=False, verbose_name="Profil to'liq")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Oxirgi kirish IP')),
                ('is_approved_by_admin', models.BooleanField(default=False, verbose_name='Admin tomonidan tasdiqlangan')),
                ('approval_date', models.DateTimeField(blank=True, null=True, verbose_name='Tasdiq sanasi')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_users', to=settings.AUTH_USER_MODEL, verbose_name='Kim tomonidan tasdiqlangan')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('managed_hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administrators', to='hospitals.hospital', verbose_name='Boshqariladigan shifoxona')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
            },
        ),
        migrations.CreateModel(
            name='UserMedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('diagnosis', 'Tashxis'), ('treatment', 'Davolash'), ('surgery', 'Operatsiya'), ('allergy', 'Allergiya'), ('medication', 'Dori'), ('test', 'Tahlil'), ('vaccination', 'Emlash')], max_length=20, verbose_name='Yozuv turi')),
                ('title', models.CharField(max_length=200, verbose_name='Sarlavha')),
                ('description', models.TextField(verbose_name='Tavsif')),
                ('date_recorded', models.DateField(verbose_name='Sana')),
                ('doctor_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Shifokor ismi')),
                ('hospital_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Shifoxona nomi')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='users/medical_records/', verbose_name='Fayl biriktirma')),
                ('is_active', models.BooleanField(default=True, verbose_name='Faol')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': 'Tibbiy tarix',
                'verbose_name_plural': 'Tibbiy tarix',
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_language', models.CharField(choices=[('uz', "O'zbek"), ('ru', 'Rus'), ('en', 'Ingliz')], default='uz', max_length=10, verbose_name='Afzal til')),
                ('preferred_doctor_gender', models.CharField(choices=[('any', "Farqi yo'q"), ('male', 'Erkak shifokor'), ('female', 'Ayol shifokor')], default='any', max_length=10, verbose_name='Afzal shifokor jinsi')),
                ('max_consultation_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maksimal konsultatsiya narxi')),
                ('preferred_consultation_time', models.CharField(choices=[('morning', 'Ertalab (08:00-12:00)'), ('afternoon', 'Tushdan keyin (12:00-17:00)'), ('evening', 'Kechqurun (17:00-20:00)'), ('any', 'Istalgan vaqt')], default='any', max_length=20, verbose_name='Afzal konsultatsiya vaqti')),
                ('auto_save_history', models.BooleanField(default=True, verbose_name='Avtomatik tarix saqlash')),
                ('share_data_for_research', models.BooleanField(default=False, verbose_name="Tadqiqot uchun ma'lumot ulashish")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi parametrlari',
                'verbose_name_plural': 'Foydalanuvchi parametrlari',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone'], name='users_user_phone_9474e8_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='users_user_user_ty_4573bb_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified', 'is_active'], name='users_user_is_veri_6fe005_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='users_user_created_cf865c_idx'),
        ),
    ]
